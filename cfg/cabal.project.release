---------------------------------------------------------------------------------
-- Domain of PHANE packages
--   * PHANE-integration-tests
---------------------------------------------------------------------------------

packages:
    pkg/PHANE-integration-tests
    pkg/PhyG

---------------------------------------------------------------------------------
-- Build decisions
--  * Compiler versions
---------------------------------------------------------------------------------

with-compiler: ghc-9.4.5


---------------------------------------------------------------------------------
-- Output paths
--
-- Place build output(s) in more accessible locations. Binaries should go in `bin`
-- and log files of the build/benchmarks/tests should go in `log`.
---------------------------------------------------------------------------------

-- datadir:          ./data
-- docdir:           ./doc
-- htmldir:          ./doc/html
symlink-bindir:   ./bin
installdir:       ./bin
logs-dir:         ./log
-- install-method:   copy
overwrite-policy: always


---------------------------------------------------------------------------------
-- Build metadata flags
--
-- Sensible alterations from the defaults to improve the build experience during
-- iterative development. Simultaneously, does not hinder release builds.
---------------------------------------------------------------------------------

haddock-html:             True
haddock-tests:            True
haddock-benchmarks:       True
haddock-internal:         True
haddock-hyperlink-source: True
jobs:                     $ncpus
keep-going:               True
minimize-conflict-set:    True


---------------------------------------------------------------------------------
-- Package flags (useful defaults)
--
-- Instruct all transative dependencies to be built *with both* optimization and
-- profiling enabled. This reduces rebuilds when debugging while not sacraficing
-- undue execution speed from imported code.
--
-- Contrastingly, *disable both* optimization and profiling when building the
-- current package's codebase. This improves the frequent recompilation speed
-- during iterative development.
--
-- Finally, enable all warnings and then prune out the undesirable ones. Having
-- the large litany of warnings enabled forces pre-emptive compatibility with
-- future breaking changes as well as improving overall code quality.
---------------------------------------------------------------------------------

-- Applies to *all* packages, not just dependencies...
package *
    benchmarks:           False
    documentation:        False
    tests:                False

    executable-profiling: False
    executable-stripping: True
    library-profiling:    False
    library-stripping:    True
    optimization: 2

package PhyGraph
    benchmarks:           False
    documentation:        False
    tests:                False

    executable-profiling: False
    executable-static:    True
    executable-stripping: True
    library-profiling:    False
    library-stripping:    True
--    static:               True

    optimization: 2
    ghc-options:
        -- Sanity check warnings:
        --   1. Fail on a warning
        --   2. Include all warnings by default
        --   3. Exclude the undesirable warnings
        -Werror
        -Wall
--        -Weverything
        -- Exclusions:
        -Wno-all-missed-specialisations
        -Wno-implicit-prelude
        -Wno-missing-import-lists
        -Wno-missing-kind-signatures
        -Wno-missing-safe-haskell-mode
        -Wno-monomorphism-restriction
        -Wno-type-defaults
        -Wno-unsafe

        -Wno-prepositive-qualified-module


---------------------------------------------------------------------------------
-- Dependency specifications
--
-- Always allow a newer version of libraries which are tightly coupled to the GHC
-- compiler version. This allows the project to build with newer versions of the
-- compiler without having to tediously tinker with dependencies, both direct and
-- transitive.
--
-- Always allow a newer version of libraries which have had a major release due
-- to a security or performance patch. Add a `preference` indicating the desire
-- to use a version greater than or equal to the patch.
---------------------------------------------------------------------------------

allow-newer:
    aeson,
    base,
    bytestring,
    text,

preferences:
    aeson          >= 2.0.0,
    bytestring     >= 0.11.3,
    text           >= 2.0,

source-repository-package
  type: git
  location: https://github.com/recursion-ninja/bv-little
  tag: 4541d78545933f450af5c241a83e4b07a0e69dca

source-repository-package
  type: git
  location: https://github.com/athas/fgl
  tag: abdbad85bf54306b98734ade2ecfc3f0fd587af8
