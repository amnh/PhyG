1) add tnt fasta/c tcm stuff and -? to docs

2) Create MatrixApproxSmall, MatrixApproxLarge
	Prealigned chars
	Add to test.pg

5) Set blocks

6) Transform 
	Matrix <-> ApproxMatrix

7) Newick--count bits in bitvector of nodes to deermine laeft versus right
  so output smaller group "top" left and "right" bottom.
  If equal  "Lower" number value left (ie earlier in input list)
  likley more basal groups earlier in matrix

8) select command for taxa/chars/blocks
	to only use a list of taxa

9) Consolidate General seqeunce characters in the same block with the same
	TCM.  Would have to merge alphabets and TCMs so that only need a single 
	hashMap for them 
	Would need to modify the CharacterData type to add a Vector (Vector BV.BV)
	to hold teh multiple sequenxe states like with static characters.

10) General sequence characters--thread hashMap through traversal--or any tree cost determination
	Need to return it with tree to update CharInfo to incude updated hashMap
	Would need to add to the CharacterData type to hold hashMap, 
	empty in leaves so use the initial charInfo hashMap, then take childrens HashMaps, 
	if they are unequal in length, union them, and update through DO
	returning updated hashMap at end with cost to potentially (if length increases) 
	update the charInfo hashMap field
	THis would be obviated with Alex and Callan's code if it can be migrated in.
	But basically--anyhting that returns a tree will have to return potentially updated
	CharInfo wrt hashMap

11) Add tcmDense2D nad tcmDense3D matrix fields to CharInfo for general matrix
	Do stuff
	Like general sequence character worth consolidating if have same TCM/Alphabet
	to save space

12) Modify DO functions to return additional fields
	For post order, return postorder median2D, "gapped" median2D, "gapped" left and right children
	For preorder:
		Do DO pairwise based on "gqpped" preliminary state, BUT
		traceback based on "gapped" children (same length as gapped preliminary)
		Can apply tcmDense3 (or hashMap for general seqeunces) on traceback to
		parent, gapped children during traceback to get "final" assignment 

		traceback produce a list of 3-tuples gapped children and preliminary,
		filter gaps out of preliinary for that field (keep gapped too),
		Convert to Vector so cheaper cons

		Maybe try to remove the Vector "cons" and make it work on lists
		to have O(1) prepend only previous row has index access--and that is n ot random
		but only one previous so probbaly could be done as a list 
		Perhaps better with Data.Sequence, constant time pre/append
		random access min (i, n-i) so OK for first r seond element--
		still should deal with head tail of previous row for contant access,
		and input data wold have to be vector because they are somehwt random,
		but that cold be worked around as well if need be.

		So could use Data.Sequence for interna NW matrix, but vectors for seqeunces--basically 
		avoiding all teh O(n) cons-ing

		Would have to write own unZip4 but that's not so bad

13) For pre-order 
	input left and right Vectors of vectors--one will have length 1 (parent), the other length
	2 (two children). Align/DO on that basis 

	Will need to keep gapped results from post-order to do properly
	if keep left/right gap info can create IA efficently ala Alex algorithm

	rely on lazyness to be effecient if don't need IA 