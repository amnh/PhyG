 1) add tnt fasta/c tcm stuff and -? to docs
	Source docs
	User docs

2) Create MatrixApproxSmall, MatrixApproxLarge
	Prealigned chars
	Add to test.pg

3) Reexamine "executeCommands" to make more stream like
	passing various results back to itself till all done
	THis allow builds, swaps, transformtion in order
	E.g. search tree first then network, search non implied alignment

4) Set graph complexity for hard-wired ans soft-wired graphs differnetly
	Hard-wired--as in complexity code now--just edges and vertices
	Soft-wired--account for the display tree set
		extra edges?, "switching" cost among diaplay trees? log2 2^n?
		so regular graph + n bits? or somehting related to grahs specification
		etc so miuch larger--toal complexity of entire dispolay tree set.
		Can be generated in code so see what it is?  To add recursive generation
		of display trees. YThat is prob the way to do it. And also add in swtitch 
		tree cost (log2 2^n)  

6) Transform 
	Matrix <-> ApproxMatrix

7) Newick--count bits in bitvector of nodes to deermine laeft versus right
  so output smaller group "top" left and "right" bottom.
  If equal  "Lower" number value left (ie earlier in input list)
  likley more basal groups earlier in matrix

  parsing very slow

8) select command for taxa/chars/blocks
	to only use a list of taxa

9) Consolidate General sequence characters in the same block with the same
	TCM.  Would have to merge alphabets and TCMs so that only need a single 
	hashMap for them 
	Would need to modify the CharacterData type to add a Vector (Vector BV.BV)
	to hold teh multiple sequenxe states like with static characters.
	Same for Matrix/Sankoff

10) General sequence characters--thread hashMap through traversal--or any tree cost determination
	Need to return it with tree to update CharInfo to incude updated hashMap
	Would need to add to the CharacterData type to hold hashMap, 
	empty in leaves so use the initial charInfo hashMap, then take childrens HashMaps, 
	if they are unequal in length, union them, and update through DO
	returning updated hashMap at end with cost to potentially (if length increases) 
	update the charInfo hashMap field
	THis would be obviated with Alex and Callan's code if it can be migrated in.
	But basically--anyhting that returns a tree will have to return potentially updated
	CharInfo wrt hashMap

18) Check all commands before execution for valid syntax
	so don't error out at very end after lots of effort

21) Profile info +RTS -xc -RTS after cabal build --allow-newer --enable profiling
	bin +RTS -p -RTS args....
	creates prog.prof

32) Add affine cost option
	modify charInfo field for affine cost
	first arg in generateDenseTransitionCostMatrix
	0 /= 0

33) Test ladderize
	look may fail if indegree 1 outdegree 1 vertex

41) For output diagnosis
	rediagnose graph(s) wiht Naive data for more legible output

42) Add function to map bitvector back to alphabet states (including ambiguities)

46) need to remove blank lines from newick nbefore parse

47)  Output alphabets incorrect;ly formated--should be single string, same for TCM

48) Hartigan 1973 preorder optimization

49) additive to binary for small number states?  Bit packing

50) Bit packing 
	Ronquist 1998, Goloboff 1999, 2002, Moelannen 1999, White and Holland 2011.

52) Node clusters--Goloboff 1996,1999

53) Graph comparison hash, 
	Could be hash of edges wth min 0 filtered out

57) Add sum line and column to crossrefernces

58) reverse cross ref loci ?

70) Add Alex binary tree rendering for ascii output

71) latex structure and all that stuff on how it works + haddock functions

72) stylish and hlint source code

83) Parallelize data processing

86) Fix alphabet outout in diagnose to be single column

81) Check all command execution for correctness before execution.
	except perhaps filenames
		commands and options 
	
82) Need to add prealigned charcater/DO like
	recode to matrix?  Approx matrix?

84) Fix diag output wrt sequences (IUPAC ambiguities for DNA)
	had to replace Alex code in report do to empty list issues

85) Check reroot best graph stuff with exact characters

87) Test matrix characters optimization and costs

88) add logic instead of multiplication for weight factor in graph cost

90) Change partition names/character names for cross-references output

91) Text reorganiztion with matrix characters wiht different matrices

92) add functinoality (basicaly for missing data) for multiple non-exact characters
	
	This will be nnecessary with "block" set issues or can be delayed iuntil block manupulations are implemented

	in a single block--eg linguistic, autosomal
	The current issue is that when using lists (from Vectors) missing seqeunce characters are stored as [].
	This causes problems adding lists togething when extracting the "column" of teh charater that would be 
	prepended (and later reversed) to the next sequence charcater in that block etc.  One posible soluiotn might be to 
	del with them as vectors.  Also cons and snoc are less efficient--but still likeli have the issue of 
	V.empty for missin and consing two of them still gets you a singel V.empty--and similar problems with
	taxa that have a mix of observed and missing characters.  Perhpas change type of missing from [] to "missing charcater"
	Character record type or Maybe Character, or a field in Character, or tuples or somehting.  Should not
	be a problem for exact charcaters since there is an explicit value for missing for add/non-add/matrix

96) set vertex info with union of vertices for later heuristics?
	Would have to have somehting akin to vertData (VertexBlockData = V.Vector (V.Vector CharacterData)) 
	and access to CharInfo--all in phylogenetic graph
	But might be a problem with rearrangements, with edges and vertices coming and going.  Maybe not.

97) Whidden eta l 2009 2010 for fast SPR tre distance FPT

98) Tree rendering
	Alex's code
	https://hackage.haskell.org/package/tree-render-text-0.4.0.0/docs/Data-Tree-Render-Text.html
		Based on Data.Tree
		
		import Data.Tree
			import Data.Tree.Render.Text

			tree :: Tree String
			tree
			  = Node "Add"
			    [ Node "Add"
			      [ Node "0" []
			      , Node "Mul"
			        [ Node "1" []
			        , Node "2" []
			        ]
			      ]
			    , Node "Neg"
			      [ Node "Max"
			        [ Node "3" []
			        , Node "4" []
			        , Node "5" []
			        , Node "Var"
			          [ Node "x" []
			          ]
			        , Node "6" []
			        ]
			      ]
			    ]

https://hackage.haskell.org/package/tree-view-0.5.1/docs/Data-Tree-View.html
https://hackage.haskell.org/package/diagrams-contrib-0.1.0.0/docs/Diagrams-TwoD-Layout-Tree.html

Write LGGraph -> Data.Tree and use 	https://hackage.haskell.org/package/tree-render-text-0.4.0.0/docs/Data-Tree-Render-Text.html
to render--would have repeated subtrees after network vertex

101) Dashes in tnt files--option?
	Document

104) label invariven data has-> bv label

105) Only partition DNA/Amino Acid data

107) Graphical profiling

	profiteur phyg.prof (from +RTS -p after --enable-profiling)
	xdg-open phyg.prof.html

	^C only 1 time to get prof info if not complete

108) read distance?
	name, data issues etc.
	if null data could just return distance costs
	used for image data as well--as with other chracter types.

116) refactor command checking code at begining of commands 

118) Clean up warnings

121) Verify unique graph output for same length

122) get branch lengths on preorder pass for collapsing later
	also--perhaps edge vertex states?

123) add single assignment and singal assignment edge weights
	Can be added later if needed for outpu display or lengths
	or could use average of min and max as a placeholder for now

124) Test tree length on small huge alphabet tree

129) Prealigned to nonadd/matrix

130) Return Bridge set 
	GraphAlgorithmBook.pdf
	https://www.geeksforgeeks.org/bridge-in-a-graph/


142) At some point keep equally costly traversals so
        add another vector dimension to  traversal trees in Phylogenetic graph

142) For soft-wired
        1) change block graph tuple to Vector of Vector of Decorated graphs to hold
                        multiple (equally costly) display trees for a given block
                        when have block sets can reduce by intersection of display trees
                        for each block could reduce complexity of output a great deal


        2) Add resolution set to vertex information
                Only updated in softwired graph optimization
                Trees and Hardwired can be empty
                        [VertData] ?
                        Child indices?
                        keep trees on post order for diaply tree later


143) Check optimization for input forest
	issues with rootindex
	need to make more flexible so can just map over components
	perhaps splitgraph/merge graph type thing to keep root index as nOTUs
	perhaps remove to an added option to break on "long" edges at with
	separate functions

144) Check optimization for multirooted components

146) Bridge Tarjan
	Popcount for size subtree

154) reduce number of resolutions by checking if charctert assignments 
	(Vector character data) and displayBV data are equal
	could have different display trees--would loose that info, but could speed up alot.
	Make an option in global settings?  Would have same leaf set (bvlabel) but different edges.

155) Document compress resolutions

156) In=out=1 contract for newick output

158) resolution vector stuff has alot of list <-> vector intercoversions
	Prob could be cleaned up a faitr amount

160) Split tree, soft-wired, functtions.  
	Make common traversal functions separate file (ie pre-order stuff)
	
161) Incremental pot-order traceback for soft-wired
	during rerooting

162) remove Maybe from resoltion child type

166) make forest a final set deleting edges?

173) rename reroot functions to make more sense

174) Abstract rectify graph functions
	Maybe a tuple with two kinds of graphs and branch WRT node update

175) Move softwired traceback to preorder ?

177) remove calls to getRoots  must be O(n)

178) Add graph reconciliation functions and report 

180) Check size of (number of) resolutions, that its not blowing up
	-- put limit

183) Fix fenewick for degenerate (no edges) tree
	Convert to forest then fmap

184) sort edges for swap 
	by length (perhaps better for net edges)
	by closness to deleted edge (good for swpping smaller edits first)
	
186) Graph distance matrix output RF, SPR, TBR, net+SPR/TBR

187) create incremental postorder pass for use in wagern and swapping
	add damping if possible

194) Alex Data.Alphabet usefule funciotns for coding and uncoding functions
	
195) Hadock

196) prelim/fimal states rendered using alphabet library

200) Tasty and quickcheck for tests

207) Incremental optimization with delta for cost at root--need to update other node costs
	past convergance?  Prob yes

209) refactor postorder to be separate functions

210) preorder to deal with multiple roots

211) Swap preorder on base graph, add back nodes from pruned on original, then preorder

212) rerrot tree make morefficient--rewrite

213) musl for static binaries

214) Check median left right order for static charcaters--make sure same as dynamic
	And for IA assignments as well

216) static branch lengths wrong

217) check swap delta cost for matrix charcaters

218) Use postorder for cost--then preorder after

219) remove all the parent child stuff from vertex--never used, rely on grpah functions

220) Migrate outputs to alphabet functions for ambiguity

221) Outputs with char changes in positions apolist type

222) abstract steepest and all functions to simplify code

223) Is sorting edges oni length ofr steepest effective?

225) option to not do branch lengths--don't need in SPR/TBR

226) SPR root state -- should be union of two descendants

231) change tree delta calcualtion--to edge calculation wag style--missing good graphs

232) rediagnose preorder pass if chnage final assignment

233) Check through <= delta in swap and wagner build

234) create alternate spr-tbr for when find new in steepest

235) check edges for splitting and readding--make sure not missing some edges--especially near root

236) Check order or branche readdition confirm sequence in closest order

239) IA swapping for network--perhoaps not due to non-uniquwe aspwect of resolutions
	skip parent in in1 out 1 veritces for IA  creation

241) For forest output, check edges versus additional root cost and filter

243) IA outpout as fasta

244) make more sensible command processing with file of allowable commands and their options
	as a pair of lists etc.

245) for multiple blocks--make sure actually taking best block for network--costs look like 0

246) more compact vertex info graph part of softwired

247) net add del steepest
	with # and atRandom

248) net move net edge (add/delete 1)

249) net/tree recombine using spr/tbr split add functions

250) ia for net swapping and final

252) Check final assingment output for dispolay trees and networks due to "hack" at traversal traceback line 677

256) For recombination
	use split on edge as in swapping, check pruned graph root BV
	exchange and proceed as for swapping--in making new grahs etc
	Must use DO--not same IA o;timization

258) graph factor making assumptions about graphtype
	needs to be fixed--especialy for delta--there is the main issue

259) set versus transform options set all at beginning, transform change later

260) In fuse--removed identity of components check
	Should be tested in large data sets

261) change fmap blah $ fmap beh to fmap (blah . bleh)

262) turn off IA for non-Trees  is a tree thing anyway.
	can generate IA if desired at end with display trees
	perhaps change to grandparent not parent if paren in1out1

263) postorder/preorder softwired

generalizedGraphPostOrderTraversal ->
postOrderSoftWiredTraversal
	post decorate sofwired
		getOutDegree1VertexAndGraph
		createBlockResolutions
	minimalReRootPhyloGraph
	updateAndFinalizePostOrderSoftWired
preOrderTreeTraversal


264) resolutoin bloick data--change to unlablled edges--much cleaner, then change function to 
	crete display trees

266) make reroot for netowek on bridge edges only  vector set up
	need linear algrithm for bridge edges

269) move generat graph functions
	ie those qwith Gr a b interfaces to LocalGraphs

270) IA for softwired based on display trees
	logic gor in1 out 1 with Alex

271) Restructure code
	IA stuff in module
	Tree/SoftWired/HArdWired as well 

272) net move--no need to reoptimize everyhting in delete step

272) check default numb to keep 1/2 etc

273) for edges--don't use as split edge if "sister" edge incident on network node
	-- or sister node is network node

275) Harwired SPR issue--work around by using restricitve TBR

277) Move all general graph functions to LG

278) filter if two dwsxcndents are boith net nodes
	espexially on blick build graph and input graph

278) Check order of edges--make sure break/readd in reasonable order for SA

279) Unions after split
	unions of final stares of HTUs (OTU's too?)
	For dynamic--use preorder IA fields--union on that
	1.17

280) Check TBR doing reroots of pruned tree properly

282) SA params to Maybe record record

283) Try adding in reroot traversal for hardwired
	--currently disabled

284) steepest edge add with randomization (perhaps same with move and delete)

291) Swap steepest--add equal costs and remove default "all" after

292) Add unions

293) Check static only parallel swap (and optimizatiopn--ie no reroots)

294)  For net build -> phylo graph
	if naked HTUs (no children) just delete those nodes and contract 
	edges etc

295)  use splitGraphOnEdge' in swap--save looking for edges later all over

296) output better graph if found in GB

297) in swap etc--if "isTree" don't do all the checking or cyclic etrc as well a bridge edges

298) transform
	to tree, to hardwrired, to softwired all doable now
		to tree with some resoltoin options
	to static Approx--for serches on new dats
		will have two sets of data in command--original and"current" could bew transformed
			may help with GPU later

299) Output phastwinclad file (tnt) ia fasta files

			
300) Check add/continuous characters for correctness after merging characters
	should be merged with same weight--if not then need to fix

303) Check traverse if mix static and dynamic--make sure all charcters ar optimized--the 0 cost thing 
	for choosing best may be issue 

304) Add inputs for prealigned slim/wide/huge sequences

305) Check min max edge cost WRT reordering with gap first versus last

307) Check input prealigned
	slim/wide/huge

308) Test union-like rejoin criterion in swap steepes/rejoin steepest

309) TNT ouput single charcters always?  010101 or can be 0 1 0 1 0 etc?
	V.fromList $ fmap show [0..9,a..z.A..Z] 
	use indices for conversion for non-additive


311) move swapMaster back into refinement

312) check prealigned with unequal tax
	and IA output

313) Checkl prealigned and static in TNT

316) hlint, stylish-haskell, remove warnings

318) write small adjunct program to filter out constant charaters fomr simple tnt files.

319) for image characters crop to same (smallesy) pixel size based on center of images

320) Verify on do remove constant from SA new chars
     Verify only do bitPacking on new charcters--prob OK--since only on BV characters,
     	but will check high alphabet non-additives

     	make remove constant-> prealignedConstant only
     		apply at all data and trasnform SA
     		same with bit packing

321) Bit packed max distance--need to use masks to calculte did a shim job

322) bit packed sub sample support--samples entire packed character
	that's an issue for small numbers of non-additive characters


323) Rationalize V.fromList and V.toList in bitpacking
	prob unncesesary back and forth
     	

325) efficiently parallleize bitpacking 


330) BV nonadd diagnose screwed up including ambiguoius characters
	Looks corret for bitpacked so must be a presentation issue not inherently incorrect

331) Diagnosis Outputs:
	HTU reconstructions--suitable for entry into file wrt ambiguies etc
	Change list -- marked required/possibke

333) Issue with set final ia in hugeSequence
	per order logic with single 0 state?

334) zero does not work with BVlittleendian corretly 
	chaneg to popCount == 0 Bits 


336)  add gap, subs, ledgin gap options and make own tcm for fasta and fastc

337) make sure steepst returns equal cost gaphs

338) all--resolve graphs earlier to reduce memory footprint

339) display trees as pecentages on reconiliation at and
	to look at whichngenes go where


340) Note--if bit packing results in all max states---then check missing value calculation for bits
	'missing' codes to determine states present has been evolving 

341) make '-' state for non-0additive consistent and sensible (fromSymbols, fromSymbolsWOGap)

342) tnt scopes allow scope first then type after? not sure of standard

343) add stupidf graph cost over edges for hardwired cost

344) Should probably make packedData unboxed


345) reblock globbing with '*' at end didn't work but "??" did.
	reblock("nonAddData", "*.tnt??") versus reblock("nonAddData", "*.tnt*")
	maybe becasue * more than once and doesn't test?

347) maybe have a size limit for parallel bitpacking--as in over 100k (tax * chars) or something

348) More fuse progress info

349) CHeck weights and tcms for prealigned/sequence for PMDL

350)  Still transfrom add to nonadd--but keep weight (when non-integer)

353) Output continuous from recoded non-add binary
	convert back or something

355) add sub argument processing for transform weight etc

356) make processing data sequential for big data sets as option?
	combining and packing

358) Make all "read" "readMaybe" and check to catch failures

359) llvm for OSX

360) add no changed field to bitpacked and non-add (maybe add too?, matrix?) chars

361) filter weight 0 characters

362) change naked '-' in additive to 0 as innaplicable length
	make doc change to note this.
	new character '=' perhaps?

363) verify local root cost and swap and fuse thing--perhaps not add if in there
	can be subtracted if double counted (inGS etc)


364) bit no bits stuff for ML versius PMDL

365) Check heiristic versus postorder graph costs--heuristics too high for dynamic?
	do to not rejiggering homologies?
	could add emprical epsilon for dynamic characters to evaluate fully
	but only needed for dynamic I ouwld think
	this percentage could be basd on differnce between dynamic and static costs for those charctaers
	get fraction length due to dynamic characters (costs random set pairwsie?) tjhat percent * percent reduction dynamic v static
	only need for cases of heuristic cost estimation--swap, fuse with swap, net add delete?


366) Move root cost and model cost to final output--otherwise confusing
	to swap and fuse

367) write collapse graph zero egde
	use in unique graph/ nubGraph

368) make sure swapSteepest' is not evaluating everyhting at any stage--do a rewrite

369) integrate collapse for graph compare
	add 7th field?
	options to report graph--collapse:True|False
	default for graphic is true, for newick/dot is false (so can get resolved graph back)

370) select unique--collapse and save but return rseolved (optimizable) graphs


371) Fix parsing errro newick single '
	Uto-Aztecan

372) Boostrap/Jackknife output--collapse < 50%

373) Add fgraph cost comment to dot files

374) Add select best (1) for block build

375) Check wagner build character in prallel--seems low

376) Sofwired/hardwired
	1) only reroot on bridges
		get bridge list from graph and pass to reroot to check if valid place to reroot

	2) resolve display trees and reroot those
		Better--cleaner--but slower
		

377) Various parallel steepest--do the numbe ron parallel at once then check
	for better use of parallel

378) Go through and refactor treee/softwored/hardwired traversal post and preorder

379) NOte for docs--for best tree analsyis use single block

380) heursitic add/delete deltas need to be completely rethought--always negative
	removed for now


381) extractDisplayTrees seems to be caled multiple times in doftwired for given graph

382) for net add--randomize and limit
	
383) remove recursiveRerootList'

384) rationalize paralle calls

385) Clean up reroot code to remove (or mothball) rerooting graphs

386) generalize new reroot code to trees as well

388) Idenitify cause ofdu edges
	-- bad edge insert?
	-- error in resolution cache?
	-- bad resolution of display graph
	
389) Remove duplicate /cylic checking outside of creation of display trees and charcaters trees

391) Net "move" not doing enyhting--not sure if bad graph state yeielding infiniites (probabaly) or 
	not finding anyhting better via that mechanism

392) Clean up old reroot code--migrate hardwired?

393) add conditions for available netowrk add stuff 
	like check for phylogenetic graph

394) Fix net move

395) Remove cycle check from convertGeneralGraphToPhylogeneticGraph when ok

396) For distance build-- when missing comparison for a block or character--add the average distance value among all non
	missing.   Then really not dispositive except for  the parts where non-missing
	

397) Add options to bias in favor of data, graph, or trajectory parallelism

399) Reverse/randomize order of move when repeating moves so not revisiting same edge move

400) Make Sure Sim Aneal stuff in new swap

401) IN swap--check that net penalty factor is correct for softwired and in differnt cost optimality criteria
