cabal-version:  3.0
build-type:     Simple

name:           phygraph
version:        0.1.0.0
--description:    Please see the README on GitHub at <https://github.com/githubuser/PhyGraph#readme>
--homepage:       https://github.com/githubuser/PhyGraph#readme
--bug-reports:    https://github.com/githubuser/PhyGraph/issues
--author:         Ward Wheeler
--maintainer:     wheeler@amnh.org
--copyright:      2021 Ward Wheeler
--license:        BSD3
--license-file:   LICENSE

-- for static linking add options -static -optl-static -optl-pthread
-- GKW cabal build --allow-newer --with-compiler=/usr/local/bin/ghc

extra-source-files:
    -- Specify the header files as required source files here.
    -- Do not specify them in the c-sources or cxx-sources stanzas.
    -- This is required for sdist and install commands to work correctly.
    ffi/external-direct-optimization/alignCharacters.h
    ffi/external-direct-optimization/alignmentMatrices.h
    ffi/external-direct-optimization/c_alignment_interface.h
    ffi/external-direct-optimization/c_alignment_interface2.h
    ffi/external-direct-optimization/c_code_alloc_setup.h
    ffi/external-direct-optimization/costMatrix.h
    ffi/external-direct-optimization/debug_constants.h
    ffi/external-direct-optimization/dyn_character.h
    ffi/external-direct-optimization/ukkCheckPoint.h
    ffi/external-direct-optimization/ukkCommon.h
    ffi/memoized-tcm/costMatrix_2d.hpp
    ffi/memoized-tcm/costMatrix_3d.hpp
    ffi/memoized-tcm/costMatrixWrapper_2d.h
    ffi/memoized-tcm/costMatrixWrapper_3d.h
    ffi/memoized-tcm/costMatrixWrapper.h
    ffi/memoized-tcm/dynamicCharacterOperations.h

-- Group of buildinfo specifications to correctly build and link to the C & C++:
-- FFI code.
common ffi-buildinfo

  cc-options:
    -rdynamic --std=c11
 
  hs-source-dirs:
    ffi

  c-sources:
    ffi/external-direct-optimization/alignCharacters.c
    ffi/external-direct-optimization/alignmentMatrices.c
    ffi/external-direct-optimization/c_alignment_interface.c
    ffi/external-direct-optimization/c_alignment_interface2.c
    ffi/external-direct-optimization/c_code_alloc_setup.c
    ffi/external-direct-optimization/costMatrix.c
    ffi/external-direct-optimization/dyn_character.c
    ffi/external-direct-optimization/ukkCheckPoint.c
    ffi/external-direct-optimization/ukkCommon.c

  -- Here we list all directories that contain C & C++ header files that the FFI
  -- tools will need to locate when preprocessing the C files. Without listing
  -- the directories containing the C header files here, the FFI preprocessor
  -- (hsc2hs, c2hs, etc.) will fail to locate the requisite files. Note also,
  -- that the parent directory of the nessicary C & C++ header files must be
  -- specified. The preprocessor will not recursively look in subdirectories for
  -- header files!
  include-dirs:
    ffi/external-direct-optimization

common ghc-flags

  ghc-options:
--    -rtsopts          
    -- Debugging flags
    -debug
    -g 
    -ddump-stg
    -ddump-cmm
    -ddump-to-file   
    -- -prof
    -fprof-auto
    -fprof-cafs
    -optc -rdynamic          

    -- Optimization flags
    -O2
    -threaded
    -fexcess-precision
    -fexpose-all-unfoldings
    -flate-specialise
    -foptimal-applicative-do
    -fspecialize-aggressively
    -fstatic-argument-transformation
    -- Usability flags
    -fdiagnostics-color=always
    -fhide-source-paths
    -j
    -- Sanity check warnings
    -Wall
    -Wcompat
    -Wdodgy-foreign-imports
    -Wduplicate-exports
    -Wempty-enumerations
    -Widentities
    -Wincomplete-patterns
    -Wincomplete-record-updates
    -Wincomplete-uni-patterns
    -Wmissed-specialisations          
    -Wmissing-deriving-strategies          
    -Wmissing-fields
    -Wmissing-home-modules
    -Wmissing-monadfail-instances
    -Wmissing-signatures
    -Wnoncanonical-monad-instances
    -Wnoncanonical-monoid-instances
    -Woverflowed-literals
    -Woverlapping-patterns
    -Wredundant-constraints
    -Wsemigroup
    -Wtabs
    -Wunrecognised-warning-flags
    -Wunused-binds
    -Wunused-do-bind
    -Wunused-foralls
    -Wunused-imports
    -Wunused-matches
    -Wwrong-do-bind

  if impl(ghc >= 8.10)
    ghc-options:
      -Wderiving-defaults
      -Wunused-packages

-- Global deviations from Haskell98
common language-specs

  -- Always use MonadFail(fail), not Monad(fail)
  other-extensions:
    MonadFailDesugaring
    DerivingStrategies

executable phyg

  import:
    ffi-buildinfo,
    ghc-flags,
    language-specs

  main-is: phygraph.hs

  ghc-options:  -Wall
                -Wincomplete-patterns
                -threaded 
                -O2
                -XBangPatterns
                -rtsopts
                -- for weeder
--                -fwrite-ide-info 
                -- linux static binaries
--		            -optl-static -optl-pthread
                -static
--                -fllvm



-- delete these for OSX for linux static binaries
  if !os(darwin)
    cc-options: -static
    ld-options: -static -pthread

  build-depends:  alphabet
                , dynamic-character
                , dynamic-character-deprecated
                , tcm
                , base >=4.10
                , containers >=0.6
                , graphviz
                , fgl
                , text
                , parallel
                , deepseq
                , bv
                -- , exceptions
                , array
                , split
                , text-short
                , random
                , hashable
                , time
                , vector
                , sort
                -- , unboxing-vector
                , MissingH >= 1.4.3
                , bv-little
                -- , bits
                , hashmap
                , bimap
                , logfloat
                , random-shuffle
                
               -- currently doesn't compile but could be useful
               -- lots of good functions
               --, Graphalyze
 
                
  default-extensions : BangPatterns                

  default-language: Haskell2010

  -- include the source files needed in src for github library
  -- this for local library files
  hs-source-dirs: .  
                  ../../PhyloLibs
  
  other-modules:  Commands.ProcessCommands
                  Commands.CommandExecution
                  Debug.Debug
                  Graphs.GraphOperations
                  GraphFormatUtilities
                  GraphOptimization.Medians
                  GraphOptimization.Traversals
                  GraphOptimization.PostOrderFunctions
                  GraphOptimization.PreOrderFunctions
                  Input.DataTransformation
                  Input.FastAC
                  Input.ReadInputFiles
                  Input.Reorganize
                  Input.TNTUtilities
                  Search.Build
                  Search.DistanceWagner
                  Search.DistanceMethods
                  Types.Types
                  Types.DistanceTypes
                  Utilities.Distances
                  Utilities.DistanceUtilities
                  Utilities.LocalGraph
                  Utilities.LocalSequence
                  Utilities.Utilities
                  Utilities.TcmHash
                  -- From PhyloLibs
                  Cyclic
                  GeneralUtilities
                  ParallelUtilities
                  SymMatrix

                  
            
library alphabet

  import:
    ghc-flags,
    language-specs

  default-language:
    Haskell2010

  hs-source-dirs:
    lib/alphabet/src

  build-depends:
--    serialize,
    utility,
    base                     >= 4.11      && < 5.0,
    bimap                    >= 0.3       && < 1.0,
    binary                   >= 0.8       && < 1.0,
    containers               >= 0.6.2     && < 1.0,
    deepseq                  >= 1.4       && < 2.0,
    keys                     >= 3.12      && < 4.0,
    mtl                      >= 2.2.2     && < 3.0,
    QuickCheck               >= 2.14      && < 3.0,
    semigroupoids            >= 5.3       && < 5.4,
    text-short               >= 0.1.3     && < 1.0,
    transformers             >= 0.5.6     && < 1.0,

  -- Apparently this is needed to compile with profiling, which is really stupid.
  -- It should only be in the modules which use TemplateHaskell, not all modules.
  -- I consider this a temporary hack to get things to compile with profiling.
  other-extensions: TemplateHaskell

  exposed-modules:
    Data.Alphabet
    Data.Alphabet.IUPAC
    Data.Alphabet.Special

  other-modules:
    Data.Alphabet.Internal      


-- Library for performing string alignment on dynamic characters.

-- Provides various metrics for scoring static characters and
-- performing string alignment on dynamic characters.

library dynamic-character

  import:
    ffi-buildinfo,
    ghc-flags,
    language-specs

  default-language:
    Haskell2010

  hs-source-dirs:
    lib/dynamic-character

  build-depends:
    tcm,
    utility,
    base                     >= 4.11      && < 5.0,
    bv-little,
    containers               >= 0.6.2     && < 1.0,
    dlist                    >= 0.8       && < 1.0,
    matrices                 >= 0.5       && < 1.0,            
    monad-loops              >= 0.4       && < 1.0,
    mtl                      >= 2.2.2     && < 3.0,
    primitive                >= 0.7.1     && < 1.0,
    vector                   >= 0.12.0.3  && < 0.13,

  exposed-modules:
    Bio.DynamicCharacter
    DirectOptimization.Pairwise
    DirectOptimization.Pairwise.Slim
    DirectOptimization.Pairwise.Wide
    DirectOptimization.Pairwise.Huge
    DirectOptimization.PreOrder

  other-modules:
    DirectOptimization.Pairwise.Internal
    DirectOptimization.Pairwise.Swapping
    DirectOptimization.Pairwise.Slim.FFI
    DirectOptimization.Pairwise.Ukkonen


library dynamic-character-deprecated

  import:
    ghc-flags,
    language-specs

  default-language:
    Haskell2010

  hs-source-dirs:
    lib/dynamic-character-deprecated/src

  build-depends:
    alphabet,
    tcm,
    utility,
    base                     >= 4.11      && < 5.0,
    bimap                    >= 0.3       && < 1.0,
    binary                   >= 0.8       && < 1.0,
    binary-instances         >= 1         && < 2.0,
    bv-little                >= 1.0.1     && < 2.0,
    bv-little:instances      >= 1.0.1     && < 2.0,
    containers               >= 0.6.2     && < 1.0,
    data-default             >= 0.5.2     && < 0.8,
    deepseq                  >= 1.4       && < 2.0,
    dlist                    >= 0.8       && < 1.0,
    graphviz                 >= 2999.20   && < 3000,
    hashable                 >= 1.3       && < 2.0,
    hashtables               >= 1.2       && < 2.0,
    keys                     >= 3.12      && < 4.0,
    lens                     >= 4.18      && < 6.0,
    monad-loops              >= 0.4       && < 1.0,
    mono-traversable         >= 1.0       && < 2.0,
    mtl                      >= 2.2.2     && < 3.0,
    parallel                 >= 3.2       && < 4.0,
    pretty-tree              >= 0.1       && < 0.2,
    QuickCheck               >= 2.14      && < 3.0,
    semigroupoids            >= 5.3       && < 5.4,
    smallcheck               >= 1.1.5     && < 2.0,
    text                     >= 1.2.4     && < 2.0,
    text-short               >= 0.1.3     && < 1.0,
    unordered-containers     >= 0.2.10    && < 1.0,
    vector                   >= 0.12.0.3  && < 0.13,
    vector-builder           >= 0.3.7     && < 0.4,
    vector-binary-instances  >= 0.2.1.1   && < 0.3,
    vector-instances         >= 3.4       && < 3.5,
    xml                      >= 1.3.14    && < 1.4,

  exposed-modules:
    Bio.Character.Encodable.Dynamic
    Bio.Character.Encodable.Dynamic.AmbiguityGroup

  other-modules:
    Bio.Character.Encodable.Dynamic.Class
    Bio.Character.Encodable.Dynamic.Element
    Bio.Character.Encodable.Dynamic.Internal
    Bio.Character.Encodable.Internal
    Bio.Character.Encodable.Stream


-- Library for working with TCMs and SCMs in various representations.

-- General purpose library for working with transition cost matrices (TCMs)
-- and symbol change matrices (SCMs). Specialization options are provided
-- for the discrete metric (non-additive) and the L1 norm (additive) TCMs &
-- SCMs. Exposes a memoized binding for sparsely indexed, large TCMs.

library tcm

  import:
    ffi-buildinfo,
    ghc-flags,
    language-specs,

  default-language:
    Haskell2010

  hs-source-dirs:
    lib/tcm/src

  build-depends:
    utility,
    binary                   >= 0.8       && < 1.0,
    base                     >= 4.11      && < 5.0,
    containers               >= 0.6.2     && < 1.0,
    deepseq                  >= 1.4       && < 2.0,
    hashable                 >= 1.3       && < 2.0,
    hashtables               >= 1.2       && < 2.0,
    QuickCheck               >= 2.14      && < 3.0,
    mono-traversable         >= 1.0       && < 2.0,
    semigroupoids            >= 5.3       && < 5.4,
    vector                   >= 0.12.0.3  && < 0.13,
    vector-binary-instances  >= 0.2.5     && < 1.0,

  exposed-modules:
    Data.Hashable.Memoize
    Data.MetricRepresentation
    Data.TCM
    Data.TCM.Dense
    Data.TCM.Overlap

  other-modules:
    Data.TCM.Dense.FFI
    Data.TCM.Internal


-- A binding to a C++ hashtable for thread-safe memoization.

-- This package is designed to provide a thread safe binding to a "pure"
-- memoization of two-way and three-way Sankoff character cost and median
-- computations.

--library tcm-memo
--
--  import:
--    ffi-buildinfo,
--    ghc-flags,
--    language-specs,
--
--  default-language:
--    Haskell2010
--
--  hs-source-dirs:
--    lib/tcm-memo/src
--
--  cc-options:       --std=c11
--  
--  cxx-options:      --std=c++14
--
--  -- This library is required for linking to the C++ standard template library.
--  if os(darwin)
--    extra-libraries:  c++
--  else
--    extra-libraries:  stdc++
--
--  hs-source-dirs:   lib/tcm-memo/ffi
--
--  c-sources:
--    ffi/memoized-tcm/costMatrixWrapper.c
--    ffi/memoized-tcm/dynamicCharacterOperations.c
--
--  cxx-sources:
--    ffi/memoized-tcm/costMatrix_2d.cpp
--    ffi/memoized-tcm/costMatrix_3d.cpp
--
--  -- Here we list all directories that contain C & C++ header files that the FFI
--  -- tools will need to locate when preprocessing the C files. Without listing
--  -- the directories containing the C header files here, the FFI preprocessor
--  -- (hsc2hs, c2hs, etc.) will fail to locate the requisite files. Note also,
--  -- that the parent directory of the nessicary C & C++ header files must be
--  -- specified. The preprocessor will not recursively look in subdirectories for
--  -- header files!
--  include-dirs:
--    ffi/memoized-tcm
--
--  build-depends:
--    exportable,
--    base                     >= 4.11      && < 5.0,
--    deepseq                  >= 1.4       && < 2.0,
--    QuickCheck               >= 2.14      && < 3.0,
--
--  exposed-modules:
--    Data.TCM.Memoized
--    Data.TCM.Memoized.Types
--    Data.TCM.Memoized.FFI
--
--  other-modules:
--  --  Data.TCM.Memoized.FFI


-- Collection of utility functions and data structures

-- Defines custom data structures for special use cases, more abstract functions
-- that base provides, and re-exported correcting to deficient libraries.

library utility

  import:
    ghc-flags,
    language-specs

  default-language:
    Haskell2010

  hs-source-dirs:
    lib/utility/src

  build-depends:
    base                     >= 4.11      && < 5.0,
    binary                   >= 0.8       && < 1.0,
    bv-little                >= 1.0.1     && < 2.0,
    bv-little:instances      >= 1.0.1     && < 2.0,
    bytestring               >= 0.10.10   && < 0.11,
    containers               >= 0.6.2     && < 1.0,
    deepseq                  >= 1.4       && < 2.0,
    foldl                    >= 1.4       && < 2.0,
    hashable                 >= 1.3       && < 2.0,
    keys                     >= 3.12      && < 4.0,
    lens                     >= 4.18      && < 6.0,
    matrix                   >= 0.3.6     && < 0.4,
    mono-traversable         >= 1.0       && < 2.0,
    parallel                 >= 3.2       && < 4.0,
    pointed                  >= 5.0       && < 6.0,
    QuickCheck               >= 2.14      && < 3.0,
    semigroupoids            >= 5.3       && < 5.4,
    tasty-hunit              >= 0.10      && < 1.0,
    text                     >= 1.2.4     && < 2.0,
    text-short               >= 0.1.3     && < 1.0,
    vector                   >= 0.12.0.3  && < 0.13,
    vector-binary-instances  >= 0.2       && < 1.0,
    vector-instances         >= 3.4       && < 3.5,

  if impl(ghc < 9.0)          
    build-depends:
      integer-gmp            >= 1.0.2     && < 2.0
              

  exposed-modules:
    Control.Parallel.Custom
    Data.BitMatrix
    Data.Either.Custom
    Data.Foldable.Custom
    Data.List.Utility
    Data.Matrix.NotStupid
    Data.MutualExclusionSet
    Data.Pair.Strict
    Data.Range
    Data.ShortText.Custom
    Data.UnionSet
    Data.Vector.Custom
    Data.Vector.Memo
    Data.Vector.NonEmpty
    Numeric.Cost
    Numeric.Extended
    Numeric.Extended.Natural
    Numeric.Extended.Real
    Numeric.NonNegativeAverage
    Test.HUnit.Custom
    Test.QuickCheck.Arbitrary.Instances

  other-modules:
    Data.BitMatrix.Internal
    Data.MutualExclusionSet.Internal
    Numeric.Extended.Internal

