Cabal-Version: 3.0
Name:          PhyGraph
Version:       0.1.0
Stability:     Alpha
Build-Type:    Simple
Tested-With:
  GHC == 9.2.2

Author:        Ward Wheeler <wheeler@amnh.org>
Copyright:     (c) 2015-2022 Ward Wheeler
License:       BSD-3-Clause
License-File:  LICENSE

Maintainer:    Ward Wheeler <wheeler@amnh.org>
Homepage:      https://github.com/wardwheeler/PhyGraph#readme
Bug-Reports:   https://github.com/wardwheeler/PhyGraph/issues

Extra-Doc-Files:
  CHANGELOG.md
  README.md

Extra-Source-Files:
  ffi/external-direct-optimization/*.h
  
Source-Repository-Package head
  type:     git
  location: git@github.com:wardwheeler/PhyGraph.git
  subdir:   pkg/PhyloLib

Source-Repository-Package head
  type:     git
  location: git@github.com:recursion-ninja/bv-little.git

-- Global deviations from Haskell98
common ffi-build-info

  cc-options:
    -rdynamic --std=c11

  -- Here we list all directories that contain C & C++ header files that the FFI
  -- tools will need to locate when preprocessing the C files. Without listing
  -- the directories containing the C header files here, the FFI preprocessor
  -- (hsc2hs, c2hs, etc.) will fail to locate the requisite files. Note also,
  -- that the parent directory of the nessicary C & C++ header files must be
  -- specified. The preprocessor will not recursively look in subdirectories for
  -- header files!
  include-dirs:
    ffi/external-direct-optimization
  
  -- Specify the header files as required source files here.
  -- Do not specify them in the c-sources or cxx-sources stanzas.
  -- This is required for sdist and install commands to work correctly.
  Includes:
    alignCharacters.h
    alignmentMatrices.h
    c_alignment_interface.h
    c_code_alloc_setup.h
    costMatrix.h
    debug_constants.h
    dyn_character.h
    ukkCheckPoint.h
    ukkCommon.h

  c-sources:
    ffi/external-direct-optimization/alignCharacters.c
    ffi/external-direct-optimization/alignmentMatrices.c
    ffi/external-direct-optimization/c_alignment_interface.c
    ffi/external-direct-optimization/c_code_alloc_setup.c
    ffi/external-direct-optimization/costMatrix.c
    ffi/external-direct-optimization/dyn_character.c
    ffi/external-direct-optimization/ukkCheckPoint.c
    ffi/external-direct-optimization/ukkCommon.c


-- Global deviations from Haskell98
common language-specs

  -- Always use MonadFail(fail), not Monad(fail)
  other-extensions:
    DerivingStrategies


flag SingleThreaded
  Description: Disable multi-threading
  Default:     False
  Manual:      True


-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
--
-- Preamble of package description and reusable definitions from above has ended
-- and below we list all build targets of the package. Build targets include:
--
--   * Primary executable(s) for public usage
--
--   * Exposed sub-libraries for public consumption as program dependancies
--
--   * Benchmarks for executables and sub-libraries
--
--   * Test-suites for executables and sub-libraries
--
--   * Additional executables for non-public, diagnostic purposes
--
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
                  
            
-- Phylogenetic Graphs
--
-- This is the main program of this package, supporting fully featured
-- phylogenetic trees, networks, and forests.
executable phyg

  import:
    ffi-build-info,
    language-specs

  main-is:
    phygraph.hs

  if !flag(SingleThreaded)
    ghc-options:
      -threaded 
      -with-rtsopts=-N
  
  ghc-options:
    -feager-blackholing
    -O2
    -rtsopts
    -static
    -Wall
    -Wincomplete-patterns
    -- problems getting llvm to function in OSX (can't find opt)
    -- -fllvm

  if !os(darwin) 
    cc-options: 
      -static
  else 
    cc-options:

  if !os(darwin) 
    ld-options: 
      -static -pthread
  else 
    ld-options: 

  build-depends:  alphabet
                , dynamic-character
                , PhyloLib
                , tcm
                , base >=4.10
                , containers >=0.6
                , graphviz   >=2999.20
                , fgl
                , text
                , parallel
                , deepseq
                , bv
                -- , exceptions
                , array
                , split
                , text-short
                , random
                , hashable
                , time
                , vector
                , sort
                -- , unboxing-vector
                , MissingH >= 1.4.3
                , bv-little
                -- , bits
                -- , hashmap
                , bimap
                , logfloat
                , random-shuffle
                
               -- currently doesn't compile but could be useful
               -- lots of good functions
               -- , Graphalyze
               , async
               , process
               
               , directory
               , inflist
               
 
                
  default-extensions: BangPatterns                

  default-language: Haskell2010

  -- include the source files needed in src for github library
  -- this for local library files
  hs-source-dirs: .
  
  other-modules:  Commands.ProcessCommands
                  Commands.CommandExecution
                  Commands.Verify
                  Debug.Debug
                  Graphs.GraphOperations
                  GraphOptimization.Medians
                  GraphOptimization.PostOrderFunctions
                  GraphOptimization.PostOrderSoftWiredFunctions
                  GraphOptimization.PreOrderFunctions
                  GraphOptimization.Traversals
                  Input.BitPack
                  Input.DataTransformation
                  Input.FastAC
                  Input.ReadInputFiles
                  Input.Reorganize
                  Input.TNTUtilities
                  Search.Build
                  Search.DistanceMethods
                  Search.DistanceWagner
                  Search.Fuse
                  Search.GeneticAlgorithm
                  Search.NetworkAddDelete 
                  Search.Refinement
                  Search.Search
                  Search.Swap
                  Search.SwapMaster 
                  Search.WagnerBuild
                  Support.Support
                  System.Timing
                  Commands.Transform
                  Types.DistanceTypes
                  Types.Types
                  Utilities.Distances
                  Utilities.DistanceUtilities
                  Utilities.LocalGraph
                  Utilities.LocalSequence
                  Utilities.TcmHash
                  Utilities.ThreeWayFunctions
                  Utilities.Utilities
                  Reconciliation.Adams
                  Reconciliation.Eun
                  Reconciliation.ReconcileGraphs


-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
--
-- Collection of sub-libraries which both, compose the package's primary program
-- (PCG/PhyG), and are also exposed for external consumption by other programs.
--
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
                  
            
library alphabet

  import:
    language-specs

  default-language:
    Haskell2010

  hs-source-dirs:
    lib/alphabet/src

  build-depends:
--    serialize,
    utility,
    base                     >= 4.11      && < 5.0,
    bimap                    >= 0.3       && < 1.0,
    binary                   >= 0.8       && < 1.0,
    containers               >= 0.6.2     && < 1.0,
    deepseq                  >= 1.4       && < 2.0,
    keys                     >= 3.12      && < 4.0,
    mtl                      >= 2.2.2     && < 3.0,
    QuickCheck               >= 2.14      && < 3.0,
    semigroupoids            >= 5.3       && < 5.4,
    text-short               >= 0.1.3     && < 1.0,
    transformers             >= 0.5.6     && < 1.0,
    vector                   >= 0.12.0.3  && < 0.13,

  -- Apparently this is needed to compile with profiling, which is really stupid.
  -- It should only be in the modules which use TemplateHaskell, not all modules.
  -- I consider this a temporary hack to get things to compile with profiling.
  other-extensions: TemplateHaskell

  exposed-modules:
    Data.Alphabet
    Data.Alphabet.Codec
    Data.Alphabet.IUPAC
    Data.Alphabet.Special

  other-modules:
    Data.Alphabet.Internal      


-- Library for performing string alignment on dynamic characters.

-- Provides various metrics for scoring static characters and
-- performing string alignment on dynamic characters.
library dynamic-character

  import:
    ffi-build-info,
    language-specs

  default-language:
    Haskell2010

  hs-source-dirs:
    lib/dynamic-character/src

  build-depends:
    alphabet,
    tcm,
    utility,
    base                     >= 4.11      && < 5.0,
    bv-little,
    containers               >= 0.6.2     && < 1.0,
    matrices                 >= 0.5       && < 1.0,            
    monad-loops              >= 0.4       && < 1.0,
    primitive                >= 0.7.1     && < 1.0,
    vector                   >= 0.12.0.3  && < 0.13,

  exposed-modules:
    Bio.DynamicCharacter
    Bio.DynamicCharacter.Measure
    Bio.DynamicCharacter.HandleGaps
    DirectOptimization.Pairwise
    DirectOptimization.Pairwise.Visualization
    DirectOptimization.Pairwise.Swapping
    DirectOptimization.Pairwise.Ukkonen
    DirectOptimization.PreOrder

  other-modules:
    DirectOptimization.Pairwise.Direction
    DirectOptimization.Pairwise.Huge
    DirectOptimization.Pairwise.Internal
    DirectOptimization.Pairwise.Slim
    DirectOptimization.Pairwise.Slim.FFI
    DirectOptimization.Pairwise.Wide


-- Library for working with TCMs and SCMs in various representations.

-- General purpose library for working with transition cost matrices (TCMs)
-- and symbol change matrices (SCMs). Specialization options are provided
-- for the discrete metric (non-additive) and the L1 norm (additive) TCMs &
-- SCMs. Exposes a memoized binding for sparsely indexed, large TCMs.

library tcm

  import:
    ffi-build-info,
    language-specs

  default-language:
    Haskell2010

  hs-source-dirs:
    lib/tcm/src

  build-depends:
    utility,
    binary                   >= 0.8       && < 1.0,
    base                     >= 4.11      && < 5.0,
    containers               >= 0.6.2     && < 1.0,
    deepseq                  >= 1.4       && < 2.0,
    hashable                 >= 1.3       && < 2.0,
    hashtables               >= 1.2       && < 2.0,
    QuickCheck               >= 2.14      && < 3.0,
    mono-traversable         >= 1.0       && < 2.0,
    semigroupoids            >= 5.3       && < 5.4,
    vector                   >= 0.12.0.3  && < 0.13,
    vector-binary-instances  >= 0.2.5     && < 1.0,

  exposed-modules:
    Data.Hashable.Memoize
    Data.MetricRepresentation
    Data.TCM
    Data.TCM.Dense
    Data.TCM.Overlap

  other-modules:
    Data.TCM.Dense.FFI
    Data.TCM.Internal

  -- Includes: (Omitted)
  --    costMatrix_2d.hpp
  --    costMatrix_3d.hpp
  --    costMatrixWrapper_2d.h
  --    costMatrixWrapper_3d.h
  --    costMatrixWrapper.h
  --    dynamicCharacterOperations.h
  
  -- Include-Dirs: (Omitted)
  --    ffi/memoized-tcm




-- A binding to a C++ hashtable for thread-safe memoization.

-- This package is designed to provide a thread safe binding to a "pure"
-- memoization of two-way and three-way Sankoff character cost and median
-- computations.

--library tcm-memo
--
--  import:
--    ffi-buildinfo,
----    language-specs,
--
--  default-language:
--    Haskell2010
--
--  hs-source-dirs:
--    lib/tcm-memo/src
--
--  cc-options:       --std=c11
--  
--  cxx-options:      --std=c++14
--
--  -- This library is required for linking to the C++ standard template library.
--  if os(darwin)
--    extra-libraries:  c++
--  else
--    extra-libraries:  stdc++
--
--  hs-source-dirs:   lib/tcm-memo/ffi
--
--  c-sources:
--    ffi/memoized-tcm/costMatrixWrapper.c
--    ffi/memoized-tcm/dynamicCharacterOperations.c
--
--  cxx-sources:
--    ffi/memoized-tcm/costMatrix_2d.cpp
--    ffi/memoized-tcm/costMatrix_3d.cpp
--
--  -- Here we list all directories that contain C & C++ header files that the FFI
--  -- tools will need to locate when preprocessing the C files. Without listing
--  -- the directories containing the C header files here, the FFI preprocessor
--  -- (hsc2hs, c2hs, etc.) will fail to locate the requisite files. Note also,
--  -- that the parent directory of the nessicary C & C++ header files must be
--  -- specified. The preprocessor will not recursively look in subdirectories for
--  -- header files!
--  include-dirs:
--    ffi/memoized-tcm
--
--  build-depends:
--    exportable,
--    base                     >= 4.11      && < 5.0,
--    deepseq                  >= 1.4       && < 2.0,
--    QuickCheck               >= 2.14      && < 3.0,
--
--  exposed-modules:
--    Data.TCM.Memoized
--    Data.TCM.Memoized.Types
--    Data.TCM.Memoized.FFI
--
--  other-modules:
--  --  Data.TCM.Memoized.FFI


-- Collection of utility functions and data structures

-- Defines custom data structures for special use cases, more abstract functions
-- that base provides, and re-exported correcting to deficient libraries.

library utility

  import:
    language-specs

  default-language:
    Haskell2010

  hs-source-dirs:
    lib/utility/src

  build-depends:
    base                     >= 4.11      && < 5.0,
    binary                   >= 0.8       && < 1.0,
    bv-little                >= 1.0.1     && < 2.0,
    bv-little:instances      >= 1.0.1     && < 2.0,
    bytestring               >= 0.10.10   && < 1.0,
    containers               >= 0.6.2     && < 1.0,
    deepseq                  >= 1.4       && < 2.0,
    foldl                    >= 1.4       && < 2.0,
    hashable                 >= 1.3       && < 2.0,
    keys                     >= 3.12      && < 4.0,
    lens                     >= 4.18      && < 6.0,
    matrix                   >= 0.3.6     && < 0.4,
    mono-traversable         >= 1.0       && < 2.0,
    parallel                 >= 3.2       && < 4.0,
    pointed                  >= 5.0       && < 6.0,
    QuickCheck               >= 2.14      && < 3.0,
    semigroupoids            >= 5.3       && < 5.4,
    tasty-hunit              >= 0.10      && < 1.0,
    text-short               >= 0.1.3     && < 1.0,
    vector                   >= 0.12.0.3  && < 0.13,
    vector-binary-instances  >= 0.2       && < 1.0,
    vector-instances         >= 3.4       && < 3.5,

  if impl(ghc < 9.0)          
    build-depends:
      integer-gmp            >= 1.0.2     && < 2.0
              

  exposed-modules:
    Data.List.Utility
    Data.Matrix.NotStupid
    Data.Vector.NonEmpty


-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
--
-- Test-suites of the sub-libraries which compose PCG/PhyG
--
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

test-suite test-dynamic-character

  import:
    language-specs

  default-language:
    Haskell2010

  main-is:
    TestSuite.hs

  type:
    exitcode-stdio-1.0

  hs-source-dirs:
    lib/dynamic-character/test

  build-depends:
    alphabet,
    dynamic-character,
    tcm,
    base                     >= 4.11      && < 5.0,
    bimap                    >= 0.3       && < 1.0,
    containers               >= 0.6.2     && < 1.0,
    QuickCheck               >= 2.14      && < 3.0,
    tasty                    >= 1.4       && < 2.0,
    tasty-quickcheck         >= 0.10      && < 1.0,
    vector                   >= 0.12.0.3  && < 0.13,

  other-modules:
    DirectOptimization.Pairwise.Test
    Test.Aligners
    Test.QuickCheck.Instances.DynamicCharacter

    
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
--
-- Additional executables which exist for the one of a few select purposes:
--
--   * Generating data for PCG/PhyG input
--
--   * Debugging the component sub-libraries of PCG/PhyG and PCG/PhyG itself
--
--   * Performing correctness verification
--
--   * Stocastically searching for non-totality counterexamples
--
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --


executable inspect-dynamic-character

  import:
    language-specs

  default-language:
    Haskell2010

  main-is:
    Inspect.hs

  hs-source-dirs:
    lib/dynamic-character/test

  build-depends:
    alphabet,
    dynamic-character,
    tcm,
    base                     >= 4.11      && < 5.0,
    bimap                    >= 0.3       && < 1.0,
    containers               >= 0.6.2     && < 1.0,
    QuickCheck               >= 2.14      && < 3.0,
    tasty                    >= 1.4       && < 2.0,
    tasty-quickcheck         >= 0.10      && < 1.0,
    vector                   >= 0.12.0.3  && < 0.13,

  other-modules:
    Test.Aligners
    Test.QuickCheck.Instances.DynamicCharacter
